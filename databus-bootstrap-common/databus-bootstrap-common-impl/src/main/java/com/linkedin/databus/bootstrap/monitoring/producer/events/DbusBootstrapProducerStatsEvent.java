/**
 * Autogenerated by Avro
 * 
 * DO NOT EDIT DIRECTLY
 */
package com.linkedin.databus.bootstrap.monitoring.producer.events;
/*
 *
 * Copyright 2013 LinkedIn Corp. All rights reserved
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied.  See the License for the
 * specific language governing permissions and limitations
 * under the License.
 *
*/


@SuppressWarnings("all")
/** Metrics for Bootstrap Producer for Databus V2  */
public class DbusBootstrapProducerStatsEvent extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  public static final org.apache.avro.Schema SCHEMA$ = org.apache.avro.Schema.parse("{\"type\":\"record\",\"name\":\"DbusBootstrapProducerStatsEvent\",\"namespace\":\"com.linkedin.databus.bootstrap.monitoring.producer.events\",\"fields\":[{\"name\":\"ownerId\",\"type\":\"int\",\"doc\":\"The id of the owner that generated the event\"},{\"name\":\"timestampLastResetMs\",\"type\":\"long\",\"doc\":\"unix timestamp of the last reset() call\"},{\"name\":\"timeSinceLastResetMs\",\"type\":\"long\",\"doc\":\"time in ms since the last reset() call\"},{\"name\":\"dimension\",\"type\":\"string\",\"doc\":\"dimension\"},{\"name\":\"numErrFellOffRelay\",\"type\":\"long\",\"doc\":\"number of times bootstrap Producer fell-off the relay\"},{\"name\":\"numErrSqlException\",\"type\":\"long\",\"doc\":\"number of erroneous requests due to sql exception \"},{\"name\":\"numWindows\",\"type\":\"long\",\"doc\":\"Number of Windows/batches seen by the applier thread \"},{\"name\":\"latencyPerWindow\",\"type\":\"long\",\"doc\":\"Latency for appending per Event Window/batch\"},{\"name\":\"numDataEventsPerWindow\",\"type\":\"long\",\"doc\":\"Number of events per event window/batch\"},{\"name\":\"currentSCN\",\"type\":\"long\",\"doc\":\"Current SCN of the bootstrap Producer/Applier\"},{\"name\":\"currentLogId\",\"type\":\"long\",\"doc\":\"Current LogId where bootstrap producer/applier is\"},{\"name\":\"currentRowId\",\"type\":\"long\",\"doc\":\"Current RowId where bootstrap producer/applier is\"}]}");
  /** The id of the owner that generated the event */
  public int ownerId;
  /** unix timestamp of the last reset() call */
  public long timestampLastResetMs;
  /** time in ms since the last reset() call */
  public long timeSinceLastResetMs;
  /** dimension */
  public java.lang.CharSequence dimension;
  /** number of times bootstrap Producer fell-off the relay */
  public long numErrFellOffRelay;
  /** number of erroneous requests due to sql exception  */
  public long numErrSqlException;
  /** Number of Windows/batches seen by the applier thread  */
  public long numWindows;
  /** Latency for appending per Event Window/batch */
  public long latencyPerWindow;
  /** Number of events per event window/batch */
  public long numDataEventsPerWindow;
  /** Current SCN of the bootstrap Producer/Applier */
  public long currentSCN;
  /** Current LogId where bootstrap producer/applier is */
  public long currentLogId;
  /** Current RowId where bootstrap producer/applier is */
  public long currentRowId;
  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call. 
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return ownerId;
    case 1: return timestampLastResetMs;
    case 2: return timeSinceLastResetMs;
    case 3: return dimension;
    case 4: return numErrFellOffRelay;
    case 5: return numErrSqlException;
    case 6: return numWindows;
    case 7: return latencyPerWindow;
    case 8: return numDataEventsPerWindow;
    case 9: return currentSCN;
    case 10: return currentLogId;
    case 11: return currentRowId;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }
  // Used by DatumReader.  Applications should not call. 
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: ownerId = (java.lang.Integer)value$; break;
    case 1: timestampLastResetMs = (java.lang.Long)value$; break;
    case 2: timeSinceLastResetMs = (java.lang.Long)value$; break;
    case 3: dimension = (java.lang.CharSequence)value$; break;
    case 4: numErrFellOffRelay = (java.lang.Long)value$; break;
    case 5: numErrSqlException = (java.lang.Long)value$; break;
    case 6: numWindows = (java.lang.Long)value$; break;
    case 7: latencyPerWindow = (java.lang.Long)value$; break;
    case 8: numDataEventsPerWindow = (java.lang.Long)value$; break;
    case 9: currentSCN = (java.lang.Long)value$; break;
    case 10: currentLogId = (java.lang.Long)value$; break;
    case 11: currentRowId = (java.lang.Long)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }
}
